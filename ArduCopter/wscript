#!/usr/bin/env python3

def build(bld):
    vehicle = bld.path.name

    # 1) ap_stlib: aquí sí acepta name=
    bld.ap_stlib(
        name=vehicle + '_libs',
        ap_vehicle=vehicle,
        ap_libraries=bld.ap_common_vehicle_libraries() + [
            'AC_AttitudeControl',
            'AC_InputManager',
            'AC_PrecLand',
            'AC_Sprayer',
            'AC_Autorotation',
            'AC_WPNav',
            'AP_Camera',
            'AP_IRLock',
            'AP_Motors',
            'AP_Avoidance',
            'AP_AdvancedFailsafe',
            'AP_SmartRTL',
            'AP_WheelEncoder',
            'AP_Winch',
            'AP_LTM_Telem',
            'AP_Devo_Telem',
            'AC_AutoTune',
            'AP_KDECAN',
            'AP_SurfaceDistance',
        ],
    )

    # 2) Lib ascon: NOMBRE POSICIONAL
    ASCON_SRC = [
        '../libraries/ascon/aead.c',
        '../libraries/ascon/ascon_ctx.cpp',
    ]
    ASCON_INC = [
        '../libraries/ascon',
    ]
    bld.ap_library(
        'ascon',                 # <-- nombre posicional, sin name=/target=
        src=ASCON_SRC,
        includes=ASCON_INC,
    )

    # 3) Programas: usa program_name=
    bld.ap_program(
        program_name='arducopter',
        program_groups=['bin', 'copter'],
        use=[vehicle + '_libs', 'ascon'],
        defines=['FRAME_CONFIG=MULTICOPTER_FRAME', 'AP_MAVLINK_ENCRYPT'],
        includes=ASCON_INC,
    )

    bld.ap_program(
        program_name='arducopter-heli',
        program_groups=['bin', 'heli'],
        use=[vehicle + '_libs', 'ascon'],
        defines=['FRAME_CONFIG=HELI_FRAME', 'AP_MAVLINK_ENCRYPT'],
        includes=ASCON_INC,
    )





